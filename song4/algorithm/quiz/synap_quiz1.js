function happy_nums(nums) {
    /**
     * 1. 입력받은 number를 string으로 타입변환을 시킨다.
     * 2. 글자 하나하나를 숫자로 변환해 제곱을 시킨다.
     * 3. 두 수를 더한다.
     */
    str_nums = toString(nums);
    
    for (const )
        
        
        
        
        
        
        
        
        
        
        
        
        
    const temp = 0;
    return `1~${nums} 범위의 행복 수는 ${temp}개이고 총합은 ${temp}입니다.`
}
for (let i = 1; i <= 10; ++i){
    console.log(happy_nums(i))
}

/**
 * 문제
 * 마스크를 쓰지 않고는 밖을 다니면 안 되는 코로나19 시대입니다.
 * 코로나19가 장기화되면서 코로나 블루라는 말이 나올 정도로 우울한 사람들이 많아지고 있습니다.
 * 세계적인 전기자동차 회사 경영자인 '얼른 마스크'씨는
 * 자신의 전기자동차를 타는 고객들이 조금이라도 행복할 수 있기를 바라며
 * 판매하는 전기자동차 번호판 일련번호 4자리를 행복 수(happy number)로 채우고자 합니다.

 * 행복 수는 각 자릿수의 제곱의 합으로 변환하는 과정을 반복할 때 언젠가는 1에 도달하는 수입니다.
 * 예로, 13 → 1x1 + 3x3 = 10 → 1x1 + 0x0 = 1이므로 13은 행복 수입니다.

 * 행복 수가 아닌 것은 슬픈(sad) 수 또는 불행(unhappy) 수라고 불립니다.
 * 예로, 4 → 4x4 = 16 → 1x1 + 6x6 = 37 → 3x3 + 7x7 = 58 → ... → 4 로 순환하여 결코 1에 도달할 수 없으니 4는 슬픈 수입니다.

 * 문제
 * '얼른 마스크'씨 회사 전기자동차의 일련번호가 될 수 있는 1 ~9999 범위의 행복 수는 모두 몇 개이고
 * 그 총합은 얼마인지 구하는 프로그램을 작성해서 보내주세요 작성하세요.

 * 입력
 * 각 범위의 최댓값을 한 줄에 하나씩 입력으로 받습니다.최종적으로 구하고자 하는 범위의 최댓값은 9999이므로 소스코드 안에 하드코딩 해도 됩니다.
 */
